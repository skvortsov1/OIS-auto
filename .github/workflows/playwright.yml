name: Playwright Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Test environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Set environment variable
        run: |
          if [ -z "${{ github.event.inputs.environment }}" ]; then
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          fi

      - name: Install Allure commandline
        run: npm install -g allure-commandline

      - name: Clean before tests
        run: npm run clean

      - name: Run Playwright tests
        run: ENVIRONMENT=${{ env.ENVIRONMENT }} npm run test

      - name: Clean storageState after tests
        run: npm run clean:storage

      - name: Upload Allure results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./allure-results

      - name: Generate Allure Report
        run: |
          allure generate ./allure-results --clean -o ./allure-report-${{ env.ENVIRONMENT }}

      - name: Upload Allure Report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ env.ENVIRONMENT }}
          path: ./allure-report-${{ env.ENVIRONMENT }}

      - name: Upload Playwright HTML report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report
          path: playwright-report/

      - name: Upload Playwright Test Media (screenshots and videos)
        uses: actions/upload-artifact@v4
        with:
          name: playwright-media
          path: test-results/

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report-${{ env.ENVIRONMENT }}
          publish_branch: gh-pages

      - name: Send Slack notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"*Test Run — ${{ job.status == 'success' && '✅ PASSED' || '❌ FAILED' }}*\n              *Event:* ${{ github.event_name == 'workflow_dispatch' && 'Manual Trigger' || github.event_name == 'schedule' && 'Scheduled Run' || github.event_name == 'push' && 'Push to Main Branch' || github.event_name }}\n
            *Environment:* ${{ github.event.inputs.environment || 'dev' }}\n
            *Author:* ${{ github.actor }}\n
            *Workflow:* <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View run>\n
            *Allure Report:* <https://skvortsov1.github.io/OIS-auto/|Open Allure Report>\n
            \"
           }" ${{ secrets.SLACK_WEBHOOK_URL }}
        