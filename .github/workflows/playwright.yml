name: Playwright Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Test environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *' # Every midnight

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Set environment variable
        run: |
          if [ -z "${{ github.event.inputs.environment }}" ]; then
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          fi

      - name: Install Allure commandline
        run: npm install -g allure-commandline

      - name: Run Playwright tests
        run: npm run test

      - name: Upload Allure results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./allure-results

      - name: Generate Allure Report
        run: |
          allure generate ./allure-results --clean -o ./allure-report-${{ env.ENVIRONMENT }}

      - name: Upload Allure Report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ env.ENVIRONMENT }}
          path: ./allure-report-${{ env.ENVIRONMENT }}

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report-${{ env.ENVIRONMENT }}
          destination_dir: ${{ env.ENVIRONMENT }}

      - name: Send Slack notification
        run: |
          STATUS="${{ job.status }}"
          if [ "$STATUS" == "success" ]; then
            COLOR="good"
            ICON="✅"
          else
            COLOR="danger"
            ICON="❌"
          fi

          EVENT_NAME="${{ github.event_name }}"
          if [ "$EVENT_NAME" == "workflow_dispatch" ]; then
            EVENT="Manual Trigger"
          elif [ "$EVENT_NAME" == "schedule" ]; then
            EVENT="Scheduled Run"
          elif [ "$EVENT_NAME" == "push" ]; then
            EVENT="Push to Main Branch"
          else
            EVENT="$EVENT_NAME"
          fi

          REPORT_URL="https://skvortsov1.github.io/OIS-auto/${{ env.ENVIRONMENT }}/index.html"

          MESSAGE="*$ICON Test Run — $STATUS*\n
          *Event:* $EVENT\n
          *Environment:* ${{ env.ENVIRONMENT }}\n
          *Author:* ${{ github.actor }}\n
          *Workflow:* <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View run>\n
          *Allure Report:* <$REPORT_URL|Open Allure Report>"

          curl -X POST -H 'Content-type: application/json' --data "{
            \"attachments\": [
              {
                \"color\": \"$COLOR\",
                \"text\": \"$MESSAGE\"
              }
            ]
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
